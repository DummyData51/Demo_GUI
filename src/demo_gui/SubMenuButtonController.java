/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package demo_gui;

import DbModel.ControllerMenuButton;
import DbModel.ControllerMenuButtonModel;
import DbModel.SubMenu;
import DbModel.SubMenuButton;
import DbModel.SubMenuButtonController.*;
import DbModel.SubMenuButtonController.SControllerMenuButtonModel;
import DbModel.SubMenuButtonController.SSubMenuButtonModel;
import DbModel.SubMenuButtonModel;
import DbModel.SubMenuModel;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/**
 *
 * @author Mughees
 */
public class SubMenuButtonController extends javax.swing.JFrame {

    
     JPanel subMenu;
    boolean controllerMenuStatus;
    boolean SubMenuScrollSatus;
    int controllerCount;
    static int TotalPanelSize=350;
    int sCount=0;
    JButton buttonClicked;
    JButton clickedBefore;
    
    int mainMenuId;
    
    
    
     int xMouse;
     int YMouse;
    /**
     * Creates new form SubMenuButtonForm
     */
    public SubMenuButtonController() {
        initComponents();
        
          SubMenuScrollBar.setLayout(new BoxLayout(SubMenuScrollBar, BoxLayout.Y_AXIS));  
        SubMenuScrollBar.removeAll();
        ControllerMenu.setLayout(new BoxLayout(ControllerMenu, BoxLayout.Y_AXIS)); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ControllerMenu = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        SubMenuScrollBar = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        editControllerMenu = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ControllerName = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setLayout(null);

        ControllerMenu.setBackground(new java.awt.Color(255, 255, 255));
        ControllerMenu.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ControllerMenu.setPreferredSize(new java.awt.Dimension(100, 200));

        javax.swing.GroupLayout ControllerMenuLayout = new javax.swing.GroupLayout(ControllerMenu);
        ControllerMenu.setLayout(ControllerMenuLayout);
        ControllerMenuLayout.setHorizontalGroup(
            ControllerMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 154, Short.MAX_VALUE)
        );
        ControllerMenuLayout.setVerticalGroup(
            ControllerMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 364, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(ControllerMenu);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(30, 60, 160, 370);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(400, 100));

        SubMenuScrollBar.setBackground(new java.awt.Color(255, 255, 255));
        SubMenuScrollBar.setAutoscrolls(true);
        SubMenuScrollBar.setPreferredSize(new java.awt.Dimension(400, 0));

        javax.swing.GroupLayout SubMenuScrollBarLayout = new javax.swing.GroupLayout(SubMenuScrollBar);
        SubMenuScrollBar.setLayout(SubMenuScrollBarLayout);
        SubMenuScrollBarLayout.setHorizontalGroup(
            SubMenuScrollBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 628, Short.MAX_VALUE)
        );
        SubMenuScrollBarLayout.setVerticalGroup(
            SubMenuScrollBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(SubMenuScrollBar);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(200, 60, 630, 0);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/demo_gui/button.PNG"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(145, 500, 50, 50);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/demo_gui/Controller-crop.jpg"))); // NOI18N
        jPanel1.add(jButton4);
        jButton4.setBounds(250, 480, 100, 80);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/demo_gui/editbutton.PNG"))); // NOI18N
        jButton5.setName("editSubMenu"); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(735, 500, 55, 50);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/demo_gui/deletebutton.PNG"))); // NOI18N
        jButton6.setName("deleteSubMenu"); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);
        jButton6.setBounds(670, 500, 60, 50);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/demo_gui/button.PNG"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7);
        jButton7.setBounds(800, 500, 50, 50);

        editControllerMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/demo_gui/editbutton.PNG"))); // NOI18N
        editControllerMenu.setName("editControllerMenuButton"); // NOI18N
        editControllerMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editControllerMenuActionPerformed(evt);
            }
        });
        jPanel1.add(editControllerMenu);
        editControllerMenu.setBounds(80, 500, 55, 50);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/demo_gui/deletebutton.PNG"))); // NOI18N
        jButton3.setName("deleteControllerMenu"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(20, 500, 50, 50);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/demo_gui/11873908_845220685574220_1650186313_n.jpg"))); // NOI18N
        jLabel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel2MouseDragged(evt);
            }
        });
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });
        jPanel1.add(jLabel2);
        jLabel2.setBounds(0, -10, 120, 60);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/demo_gui/cross.PNG"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel3);
        jLabel3.setBounds(840, 20, 20, 20);

        ControllerName.setFont(new java.awt.Font("Simplified Arabic Fixed", 1, 36)); // NOI18N
        ControllerName.setForeground(new java.awt.Color(140, 186, 46));
        jPanel1.add(ControllerName);
        ControllerName.setBounds(450, 20, 280, 40);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/demo_gui/min.PNG"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel4);
        jLabel4.setBounds(810, 20, 20, 20);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/demo_gui/Images/Final_controller_back.jpg"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 880, 583);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 878, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
     public void setMainMenuId(int id) throws SQLException
    {
        mainMenuId=id;
       SControllerMenuButtonModel mm= new SControllerMenuButtonModel();
       ArrayList<SControllerMenuButton> initialList=mm.findChildren(id);
       controllerCount=1;
       
       for(SControllerMenuButton s:initialList)
       {
         
          JButton b= new JButton(s.name);
          b.setName(String.valueOf(s.id));
          
          b.addActionListener(new ActionListener()
        {

           @Override
           public void actionPerformed(ActionEvent e) {
               
               SubMenuScrollBar.setPreferredSize(new Dimension(400,0));
               sCount=0;
               jScrollPane1.setSize(630,0);
            if(buttonClicked !=null && buttonClicked.getName().equals("deleteControllerMenu"))
        {
            JButton b= (JButton)e.getSource();
        
        int id = Integer.parseInt(b.getName());
        SControllerMenuButtonModel m= new SControllerMenuButtonModel();
         try {
             m.deleteControllerMenuButton(id);
             ControllerMenu.remove(b);
             ControllerMenu.revalidate();
              ControllerMenu.repaint();
             buttonClicked=null;
             
             SubMenuScrollBar.removeAll(); 
           /*  
             controllerCount--;
              if(controllerCount<11)
            {
           ControllerMenu.setPreferredSize(new Dimension(100,controllerCount*18));
            }
             */
              Component[] components =  ControllerMenu.getComponents(); 
           ControllerMenu.setPreferredSize(new Dimension(100,components.length*30)); 
           
         } catch (SQLException ex) {
             
         }
        }
         else if(buttonClicked !=null && buttonClicked.getName().equals("editControllerMenuButton"))
        {
            JButton b= (JButton)e.getSource();        
            
            EditButtonFrame ef= new EditButtonFrame();
            ef.setVisible(true);
            ef.addWindowListener(new WindowAdapter(){
            public void windowClosing(WindowEvent e){
                 try
                 {
                     
                      int id = Integer.parseInt(b.getName());
            
            
            SControllerMenuButtonModel m= new SControllerMenuButtonModel();
     
             m.updateControllerMenuButton(id,ef.getName());
            b.setText(ef.getName());
             ControllerMenu.revalidate();
             ControllerMenu.repaint();
             buttonClicked=null;
         } catch (SQLException ex) {
             
         }
                
                ef.dispose();
            }
        });
       
        }
         else
           {
               SubMenuScrollBar.removeAll();  
              
               buttonClicked =  ((JButton)e.getSource());         
               try {
                   SetSubMenuControllerName(buttonClicked.getText().toString());
                   createGUI(buttonClicked.getName());
               } catch (SQLException ex) 
               {
                   
               }
          
           
           }
                   
           }
            
        });
        
           ControllerMenu.add(b);
           controllerCount++;
       }
     /*  if(controllerCount>11)
       {
           ControllerMenu.setPreferredSize(new Dimension(100,controllerCount*18));
       }
       */
       Component[] components =  ControllerMenu.getComponents(); 
           ControllerMenu.setPreferredSize(new Dimension(100,components.length*30)); 
           
       ControllerMenu.repaint();
       ControllerMenu.revalidate();
        
        
    }
     
     
     public void createGUI(String name ) throws SQLException
    {
       int n =Integer.parseInt(name);
        SSubMenuModel cmbm= new SSubMenuModel();
       ArrayList< SSubMenu> cmb=cmbm.findChildren(n);
       
       
       for(SSubMenu c: cmb)
       {
           createSubMenu(String.valueOf(c.id));          
       }
       
       this.repaint();
       this.revalidate();
    }
     
      public void SetSubMenuControllerName(String name)
    {
        ControllerName.setText(name);
    }
       public void createSubMenu(String name) throws SQLException
    {
         JPanel subMenuButtons= new JPanel();  
       
       subMenuButtons.setLayout(new BoxLayout(subMenuButtons, BoxLayout.Y_AXIS)); 
        JButton add= new JButton();    
        
        add.addActionListener(new ActionListener()
        {

           @Override
           public void actionPerformed(ActionEvent e) {
          
                JPanel pp = (JPanel) ((JButton)e.getSource()).getParent();
               JPanel submm=(JPanel)pp.getParent();
               Component[]tt = submm.getComponents();
              JScrollPane ss = (JScrollPane)tt[1];
               JPanel subm=(JPanel)ss.getViewport().getView();
               
               
          int subMenuId=Integer.parseInt(subm.getName());
          SSubMenuButtonModel smb=new SSubMenuButtonModel();
           String s=null;
               try {
                 s= smb.insertSubMenuButton("           ", subMenuId);
                  
               } catch (SQLException ex) {
                 
               }
           
               
               JButton b=new JButton("           ");
               b.setName(s);
 //Mycode-------------              
          ImageIcon addImage = new ImageIcon(getClass().getResource("Images/no pic.jpg"));
            Image img = addImage.getImage();
            addImage = new ImageIcon(img);
            
             b.setIcon(addImage);
             b.setBackground(Color.white);
             
  //\----------------------------------------           
               b.addActionListener(new ActionListener() {

                   @Override
                   public void actionPerformed(ActionEvent e) {
                      
                       if(buttonClicked != null && buttonClicked.getName().equals("deleteSubMenuButton"))
                       {
                           JButton b=(JButton)e.getSource();
                           Container c= b.getParent();
                           int subMenuId=Integer.parseInt(c.getName());
                           int buttonId=Integer.parseInt(b.getName());
                           SSubMenuButtonModel sbm= new SSubMenuButtonModel();
                           try {
                               sbm.deleteSubMenuButton(buttonId);
                                 
           
           
         
                           c.remove(b);
                            Component[] components = c.getComponents(); 
                            c.setPreferredSize(new Dimension((components.length*90),100));
                           repaint();
                           revalidate();
                           } catch (SQLException ex) {
                               Logger.getLogger(Controller.class.getName()).log(Level.SEVERE, null, ex);
                           }
                           
                         
                       }
                  else if(buttonClicked !=null && buttonClicked.getName().equals("editSubMenuButton"))
                {
            JButton b= (JButton)e.getSource(); 
            Container c= b.getParent();
            
            EditButtonWithPic ef= new EditButtonWithPic();
            ef.setVisible(true);
             ef.setName(b.getText().toString());
            ef.addWindowListener(new WindowAdapter(){
            public void windowClosing(WindowEvent e){
                 
                
                try
                 {
                     
            int id = Integer.parseInt(b.getName());           
            SSubMenuButtonModel m= new SSubMenuButtonModel();     
            m.updateSubMenuButton(id,ef.getName());
            b.setText(ef.getName());
              try {
                     File file = ef.getFile();
                      BufferedImage img;
                      
                        img=ImageIO.read(file);      
                        ImageIcon icon=new ImageIcon(img); // ADDED
                        
                        
                        //-------Resiging th image 
                        Image i = icon.getImage(); 
                        Image newone = i.getScaledInstance(42, 54, Image.SCALE_SMOOTH);
                        icon = new ImageIcon(newone);
                        //---------
                        
                        b.setIcon(icon); // ADDED

                        Dimension imageSize = new Dimension(40,40); // ADDED
                         

                        
                        b.revalidate(); // ADDED
                        b.repaint(); // ADDED
                        
                        
                        save(file , b.getName().toString());
                    }
                    catch(Exception e1) {}
              
            c.revalidate();
            c.repaint();
            buttonClicked=null;
             
             
         } catch (SQLException ex) {
             
         }
                
                ef.dispose();
            }
        });
       
        }
                       
                   }
               } );
               
            
          
           subm.add(b);
           Component[] components =  subm.getComponents(); 
           subm.setPreferredSize(new Dimension(components.length*150,100)); 
          repaint();
          revalidate();
           
           }
                   
           
            
        });
        
        
       JButton edit= new JButton();
       edit.addActionListener(new ActionListener() {

             @Override
             public void actionPerformed(ActionEvent e) {
             buttonClicked=(JButton)e.getSource(); 
             }
         });
      
       JButton delete= new JButton();
       
        delete.addActionListener(new ActionListener()
        {

           @Override
           public void actionPerformed(ActionEvent e)
           {               
               buttonClicked=(JButton)e.getSource();
               
           }
           });
        
        
       ImageIcon addImage = new ImageIcon(getClass().getResource("Images/c+.png"));
            Image img = addImage.getImage();
            addImage = new ImageIcon(img);
            
        add.setIcon(addImage);
        add.setBackground(Color.white);
        add.setBorder(null);
        
        addImage =  new ImageIcon(getClass().getResource("Images/cedit.png"));
         img = addImage.getImage();
            
            
            addImage = new ImageIcon(img);
           
        edit.setIcon(addImage);
        edit.setBackground(Color.white);
        edit.setBorder(null);           
      
        edit.setName("editSubMenuButton");
        
           addImage =  new ImageIcon(getClass().getResource("Images/cdel.png"));
             img = addImage.getImage();
            addImage = new ImageIcon(img);      
                  
            
            
        delete.setIcon(addImage);
        delete.setName("deleteSubMenuButton");
        delete.setBackground(Color.white);
        delete.setBorder(null);        
        
        
        add.setSize(new Dimension(25, 25));
        edit.setSize(new Dimension(25, 25));
        delete.setSize(new Dimension(25, 25));
        
       
        subMenuButtons.add(add);
        subMenuButtons.add(edit);
        subMenuButtons.add(delete);
        subMenuButtons.setBackground(Color.WHITE);
       
        
       
       
       
         subMenu= new JPanel();        
         subMenu.setLayout(new BoxLayout(subMenu, BoxLayout.X_AXIS)); 
         subMenu.setPreferredSize(new Dimension(400,70));
         subMenu.setMinimumSize(new Dimension(400, 70));
         subMenu.setMaximumSize(new Dimension(400, 70));
        // subMenu.add(subMenuButtons);
         subMenu.setName(name);
         subMenu.setBackground(Color.WHITE);
         
         subMenu.addMouseListener(new MouseAdapter(){
        
             public void mousePressed(MouseEvent e) {
                 
                 if(buttonClicked != null && buttonClicked.getName().equals("deleteSubMenu"))
                 {
                     JPanel p =(JPanel)e.getSource();                 
                    Container c=p.getParent();
                    Container cn=c.getParent();    
                    Container cnn=cn.getParent();
                     Container cnnn = cnn.getParent();
                     
                    int id=Integer.parseInt(p.getName());
                 
                 SSubMenuModel s= new SSubMenuModel();
                     try {
                         s.deleteSubMenu(id);                         
                         JLabel i=findLabel(p.getName());                        
                         
                         cnnn.remove(i);
                         cnn.remove(cn);
                         cnnn.remove(cnn);
                         
                           Dimension d =SubMenuScrollBar.getPreferredSize();
       
                 d.height-=140;
               SubMenuScrollBar.setPreferredSize(d); 
          
         
                         
           sCount--;
           if(sCount<3)
           {
                
           Dimension ss=jScrollPane1.getSize();
           ss.height-=140;
           jScrollPane1.setSize( ss);
           }  
             
        
                         repaint();
                         revalidate();
                     } catch (SQLException ex) {
                        
                     }
                 }
                 
                 
                 
                 
                }
             
             
    });
         
         
         SSubMenuButtonModel smm= new SSubMenuButtonModel();
         ArrayList<SSubMenuButton> buttonsList=smm.findChildren(Integer.parseInt(name));
         
         for(SSubMenuButton s:buttonsList )
         {
             
               JButton b=new JButton(s.name);
               b.setName(String.valueOf(s.id));
               
                //----------------------Mycode
                try
               {
                 File f = new File(b.getName()+".jpg");
                 
                 if(f.exists())
                 {
                  addImage =   new ImageIcon(b.getName()+".jpg");
                    img = addImage.getImage();
            
            
                    addImage = new ImageIcon(img);
                    
                     //-------Resiging th image 
                        Image i = addImage.getImage(); 
                        Image newone = i.getScaledInstance(42, 54, Image.SCALE_SMOOTH);
                        addImage = new ImageIcon(newone);
                        //---------
           
                     b.setIcon(addImage);
                     b.setBackground(Color.white);
                 }
                 else
                 {
                     addImage =  new ImageIcon(getClass().getResource("Images/no pic.jpg"));
                    img = addImage.getImage();
            
            
                    addImage = new ImageIcon(img);
                    
                     //-------Resiging th image 
                        Image i = addImage.getImage(); 
                        Image newone = i.getScaledInstance(42, 54, Image.SCALE_SMOOTH);
                        addImage = new ImageIcon(newone);
                        //---------
           
                     b.setIcon(addImage);
                     b.setBackground(Color.white);
                     
                 }
                       
               }catch(Exception e)
               {
                   addImage =  new ImageIcon(getClass().getResource("Images/no pic.jpg"));
                    img = addImage.getImage();
            
            
                    addImage = new ImageIcon(img);
                    
                     //-------Resiging th image 
                        Image i = addImage.getImage(); 
                        Image newone = i.getScaledInstance(42, 54, Image.SCALE_SMOOTH);
                        addImage = new ImageIcon(newone);
                        //---------
           
                     b.setIcon(addImage);
                     b.setBackground(Color.white);
                     
                   
               }
              
               
               
  //----------------           
               
               b.addActionListener(new ActionListener() {

                   @Override
                   public void actionPerformed(ActionEvent e)
                   {
                      
                       if(buttonClicked != null && buttonClicked.getName().equals("deleteSubMenuButton"))
                       {
                           JButton b=(JButton)e.getSource();
                           Container c= b.getParent();
                           int subMenuId=Integer.parseInt(c.getName());
                           int buttonId=Integer.parseInt(b.getName());
                           SSubMenuButtonModel sbm= new SSubMenuButtonModel();
                           try {
                               sbm.deleteSubMenuButton(buttonId);
                           c.remove(b);
                           Component[] components = c.getComponents(); 
                           c.setPreferredSize(new Dimension((components.length*120),100));
                           c.repaint();
                           c.revalidate();
                           } catch (SQLException ex) {
                               Logger.getLogger(Controller.class.getName()).log(Level.SEVERE, null, ex);
                           }
                           
                         
                       }
           else if(buttonClicked !=null && buttonClicked.getName().equals("editSubMenuButton"))
                {
            JButton b= (JButton)e.getSource(); 
            Container c= b.getParent();
            
            EditButtonWithPic ef= new EditButtonWithPic();
            ef.setVisible(true);
            ef.setName(b.getText().toString());
            
            ef.addWindowListener(new WindowAdapter(){
            public void windowClosing(WindowEvent e)
            {
                 try
                 {
                     
                      int id = Integer.parseInt(b.getName());
            
            
            SSubMenuButtonModel m= new SSubMenuButtonModel();
     
             m.updateSubMenuButton(id,ef.getName());
            b.setText(ef.getName());
            
            try {
                     File file = ef.getFile();
                      BufferedImage img;
                      
                        img=ImageIO.read(file);
                        ImageIcon icon=new ImageIcon(img); // ADDED
                     

                      //-------Resiging th image 
                        Image i = icon.getImage(); 
                        Image newone = i.getScaledInstance(42, 54, Image.SCALE_SMOOTH);
                        icon = new ImageIcon(newone);
                        //---------
                        
                        b.setIcon(icon); // ADDED
                           
                        b.revalidate(); // ADDED
                        b.repaint(); // ADDED
                        
                        
                        save(file , b.getName().toString());
                    }
                    catch(Exception e1) {}
            
            
            c.revalidate();
            c.repaint();
             buttonClicked=null;
         } catch (SQLException ex) {
             
         }
                
                ef.dispose();
            }
        });
       
        }
                       
                   }
               } );           
           subMenu.add(b);
          
         }
         
          Component[] components = subMenu.getComponents(); 
          subMenu.setPreferredSize(new Dimension((components.length*150),100));
           
           
            repaint();
        revalidate();
         
         
         
         
    
         JScrollPane subMenuBar= new JScrollPane(subMenu,JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, 
        JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
        subMenuBar.getViewport().setMinimumSize(new Dimension(500, 100));
        subMenuBar.getViewport().setPreferredSize(new Dimension(500, 100));
        subMenuBar.getViewport().setMaximumSize(new Dimension(500, 100));
    
  
   
       Dimension d =SubMenuScrollBar.getPreferredSize();
        d.height+=140;  
         SubMenuScrollBar.setPreferredSize(d);
       if(sCount < 3)
       {
           Dimension s=jScrollPane1.getSize();
           s.height+=140;
           jScrollPane1.setSize( s);
           
       }           
       sCount++;
          JLabel subMenuName=new JLabel();
        SSubMenuModel m= new SSubMenuModel();
        SSubMenu s=m.findSubMenu(Integer.parseInt(name));
        
       subMenuName.setName(name);
       subMenuName.setText(s.name);
       
       subMenuName.addMouseListener( new MouseAdapter(){
        
             public void mousePressed(MouseEvent e) {
                 
                 if(buttonClicked.getName().equals("editSubMenu"))
                 { 
                     JLabel b= (JLabel)e.getSource();        
            
            EditButtonFrame ef= new EditButtonFrame();
            ef.setVisible(true);
            ef.addWindowListener(new WindowAdapter(){
                
            public void windowClosing(WindowEvent e){
                 try
                 {
                     
                      int id = Integer.parseInt(b.getName());
            
            
            SSubMenuModel m= new SSubMenuModel();
     
             m.updateSubMenu(id,ef.getName());
            b.setText(ef.getName());
             revalidate();
             repaint();
             buttonClicked=null;
             
         } catch (SQLException ex) {
             
         }
                
                ef.dispose();
            }
        });
                 
                 } 
                 
             }
             }
               
               );
       
       JPanel temp = new JPanel();
       temp.setLayout(new BoxLayout(temp, BoxLayout.X_AXIS)); 
       temp.setBackground(Color.WHITE);
      
       temp.add(subMenuButtons);
        temp.add(subMenuBar);
        
       SubMenuScrollBar.add(subMenuName);          
        SubMenuScrollBar.add(temp);        
        SubMenuScrollBar.revalidate();
        SubMenuScrollBar.repaint();
        
        
    }
       
        public JLabel findLabel(String name )
    {
        Component [] c=SubMenuScrollBar.getComponents(); 
        for(Component label: c)
        {
            try
            {
            if(label.getName().equals(name))
            {
                
                    JLabel found=(JLabel)label;
                    return found;
                    
           
            }
            }
            catch(Exception e)
            {
                
            }
                
        }
     
        return null;
    }
       
    public void save( File file , String name)
    {
        try
        {
                 BufferedImage g =  ImageIO.read(file);                           
                 ImageIO.write(g, "jpg", new File(name+".jpg"));
                  
                    
        }catch(Exception e)
        {
            
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        JButton b= new JButton();
         
        b.setSize(130, 30);
        
        b.setText("           ");
      
        SControllerMenuButtonModel cmbm= new SControllerMenuButtonModel();
        String s=null;
        try {
            s =cmbm.insertControllerMenuButton("           ", mainMenuId);
            b.setName(s);
            controllerCount++;
        } catch (SQLException ex) {

            
        }

        b.addActionListener(new ActionListener()
            {

                @Override
                public void actionPerformed(ActionEvent e) {

                    SubMenuScrollBar.setPreferredSize(new Dimension(500,0));
                    sCount=0;
                    jScrollPane1.setSize(630,0);
                    if(buttonClicked !=null && buttonClicked.getName().equals("deleteControllerMenu"))
                    {
                        JButton b= (JButton)e.getSource();

                        int id = Integer.parseInt(b.getName());
                        SControllerMenuButtonModel m= new SControllerMenuButtonModel();
                        try {
                            m.deleteControllerMenuButton(id);
                            ControllerMenu.remove(b);
                            ControllerMenu.revalidate();
                            ControllerMenu.repaint();
                            buttonClicked=null;

                            SubMenuScrollBar.removeAll();

                            controllerCount--;
                            if(controllerCount<11)
                            {
                                ControllerMenu.setPreferredSize(new Dimension(100,controllerCount*18));
                            }
                        } catch (SQLException ex) {

                        }
                    }
                    else if(buttonClicked !=null && buttonClicked.getName().equals("editControllerMenuButton"))
                    {
                        JButton b= (JButton)e.getSource();

                        EditButtonFrame ef= new EditButtonFrame();
                        ef.setVisible(true);
                        ef.addWindowListener(new WindowAdapter(){
                            public void windowClosing(WindowEvent e){
                                try
                                {

                                    int id = Integer.parseInt(b.getName());

                                    SControllerMenuButtonModel m= new SControllerMenuButtonModel();

                                    m.updateControllerMenuButton(id,ef.getName());
                                    b.setText(ef.getName());
                                    ControllerMenu.revalidate();
                                    ControllerMenu.repaint();
                                    buttonClicked=null;
                                } catch (SQLException ex) {

                                }

                                ef.dispose();
                            }
                        });

                    }
                    else
                    {
                        SubMenuScrollBar.removeAll();

                        buttonClicked =  ((JButton)e.getSource());
                        try {
                            SetSubMenuControllerName(buttonClicked.getText().toString());
                            createGUI(buttonClicked.getName());
                        } catch (SQLException ex)
                        {
                            
                        }

                    }

                }

            });

         /*   if(controllerCount>11)
            {
                ControllerMenu.setPreferredSize(new Dimension(100,controllerCount*18));
            }
*/
            ControllerMenu.add(b);

            Component[] components =  ControllerMenu.getComponents(); 
           ControllerMenu.setPreferredSize(new Dimension(100,(components.length*30))); 
           
            this.revalidate();
            this.repaint();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        buttonClicked=(JButton)evt.getSource();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        try
        {
            
        
        if(buttonClicked.getName() != null)
        {
            
        
        int controllerId=Integer.parseInt(buttonClicked.getName());
       
        
        SSubMenuModel smm = new SSubMenuModel();
        String id=null;
        try {
            id=smm.insertSubMenu("Input",controllerId);
            
            

        } catch (SQLException ex)
        {

        }
        try {
            createSubMenu(id);
        } catch (SQLException ex) {
            Logger.getLogger(Controller.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        
        }catch(Exception ex)
        {
            JOptionPane.showMessageDialog(this,"Select the Menu First !");
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void editControllerMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editControllerMenuActionPerformed

        buttonClicked=(JButton)evt.getSource();
    }//GEN-LAST:event_editControllerMenuActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        buttonClicked=(JButton)evt.getSource();

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jLabel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseDragged

        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        this.setLocation(x - xMouse, y - YMouse);
    }//GEN-LAST:event_jLabel2MouseDragged

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed

        xMouse = evt.getX();
        YMouse = evt.getY();
    }//GEN-LAST:event_jLabel2MousePressed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked

        this.dispose();
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked

        this.setExtendedState(this.getExtendedState() | this.ICONIFIED);
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       
        buttonClicked=(JButton)evt.getSource();
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SubMenuButtonController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SubMenuButtonController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SubMenuButtonController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SubMenuButtonController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SubMenuButtonController().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ControllerMenu;
    private javax.swing.JLabel ControllerName;
    private javax.swing.JPanel SubMenuScrollBar;
    private javax.swing.JButton editControllerMenu;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
